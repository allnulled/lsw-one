{
  "type": "type",
  "class": "class",
  "extends": "extends",
  "Object": "Object",
  "vendor": "vendor",
  "lsw": "lsw",
  "namespace": "namespace",
  "LswCircuiter": "LswCircuiter",
  "source code": "source code",
  "La clase está definida así:\n": "La clase está definida así:\n",
  "LswCommander": "LswCommander",
  "description": "description",
  "Este método se encarga de pasar los PROXIES a SCHEMA para el LswDatabase. No los registra: devuelve el schema resultante solamente.": "Este método se encarga de pasar los PROXIES a SCHEMA para el LswDatabase. No los registra: devuelve el schema resultante solamente.",
  "returns": "returns",
  "the general adaptation of SchemaEntity class to Schema Definition Object for LswDatabase.": "the general adaptation of SchemaEntity class to Schema Definition Object for LswDatabase.",
  "Este método se encarga de pasar los PROXIES a SCHEMA para el LswDatabase. Sí los registra en la instancia actual: no solo devuelve el schema.": "Este método se encarga de pasar los PROXIES a SCHEMA para el LswDatabase. Sí los registra en la instancia actual: no solo devuelve el schema.",
  "Class": "Class",
  "LswSchema": "LswSchema",
  "code.start": "code.start",
  "URLCommand object": "URLCommand object",
  "": "",
  "lsw\n": "lsw\n",
  "aclaration": "aclaration",
  "- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n\n```js\nThis is some code.\n\n```\n": "- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n\n```js\nThis is some code.\n\n```\n",
  "- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n": "- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n- The `LswCircuiter` class is available from the `globalThis` global scope variable.\n",
  "- The `LswCircuiter` class is available from the `globalThis` global scope variable.": "- The `LswCircuiter` class is available from the `globalThis` global scope variable.",
  "The `LswCircuiter` class is available from the `globalThis` global scope variable.\n": "The `LswCircuiter` class is available from the `globalThis` global scope variable.\n",
  "variable": "variable",
  "section": "section",
  "Lsw Framework » Lsw Circuiter API » LswCircuiter class": "Lsw Framework » Lsw Circuiter API » LswCircuiter class",
  "AsyncCircuit class\n": "AsyncCircuit class\n",
  "reference": "reference",
  "lsw.framework.lsw-circuiter.start.ref ": "lsw.framework.lsw-circuiter.start.ref "
}